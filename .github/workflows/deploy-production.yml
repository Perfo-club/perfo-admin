on:
  push:
    branches:
      - main
  workflow_dispatch:
  
jobs:
  update-repository-pull:
    name: Build and deploy
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Setup database
      run: psql -h postgres -U postgres_user -c 'CREATE DATABASE "test";'
      env:
        PGPASSWORD: postgres
    - name: Checkout repo
      uses: actions/checkout@v4
    - name: Setup Node
      uses: actions/setup-node@v3
      with: 
        node-version: '18.20.3'
    - name: Install dependencies
      run: npm install
    - name: Install ssh keys
      # check this thread to understand why its needed:
      # https://stackoverflow.com/a/70447517
      run: |
        install -m 600 -D /dev/null ~/.ssh/id_rsa
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
    - name: Set up environment
      run: echo "export PATH=$PATH" >> $GITHUB_ENV
    - name: Create .env file
      run: echo "${{ secrets.TEST_ENV }}" > .env
    - name: Wait for PostgreSQL to be ready
      run: |
        until pg_isready -h localhost -p 5432; do
          echo "Waiting for PostgreSQL to be ready..."
          sleep 5
        done
    - name: Run tests
      run: npm run test
    - name: "Build"
      run: NODE_ENV=production npm run build
    - name: "Delete previous build"
      run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "rm -R ${{secrets.WORK_DIR}}/dist"
    - name: "Copy build"
      run: scp -r dist ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}}:${{secrets.WORK_DIR}}
    - name: Connect, install and restart service
      run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "export NVM_DIR=~/.nvm && source ~/.nvm/nvm.sh && cd ${{ secrets.WORK_DIR }} && git pull origin && npm install && pm2 restart perfo-cms && exit"
    - name: cleanup
      run: rm -rf ~/.ssh